<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>M4sk</title>
    <link>https://m4sk93.github.io/</link>
    <description>Recent content on M4sk</description>
    <image>
      <title>M4sk</title>
      <url>https://m4sk93.github.io/images/papermod-cover.png</url>
      <link>https://m4sk93.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.124.1</generator>
    <language>en</language>
    <copyright>PaperMod Contributors</copyright>
    <lastBuildDate>Wed, 07 Aug 2024 08:18:52 +0000</lastBuildDate>
    <atom:link href="https://m4sk93.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cosmos</title>
      <link>https://m4sk93.github.io/posts/cosmos/</link>
      <pubDate>Wed, 07 Aug 2024 08:18:52 +0000</pubDate>
      <guid>https://m4sk93.github.io/posts/cosmos/</guid>
      <description>cosmos生态 https://github.com/cosmos/cosmos-sdk
https://docs.cosmos.network/v0.50/learn/intro/overview https://tutorials.cosmos.network/
https://tutorials.cosmos.network/hands-on-exercise/0-native/1-preparation.html
应用链 专用于特定应用的区块链（Application-specific blockchain），也叫应用链（Appchain）， 是指专为运营某一个特定应用而设计的区块链，与之对应的为多个应用共同运行而设计的公共区块链。
vuln &amp;laquo;解析我挖到的Ethermint链任意代币增发0day&amp;raquo; https://www.iczc.me/post/ethermint-cve-2021-25837/ https://www.youtube.com/watch?v=icK07IuX4po
Terra 区块链成为利用 Cosmos 链漏洞的恶意攻击的目标，导致未经授权提取价值约 400 万美元的资产。 Terra 链因紧急升级而暂停。似乎有人利用 IBC 漏洞在 Terra 链上铸造多个代币，包括 ASTRO. 这个漏洞在今年 4 月已经披露，属于是 cosmos 基础库中的漏洞，但 Terra 没有修复。
尽管该问题自 4 月起就已为公众所知，但 2024 年 6 月在 Terra 2.0 上安装的升级包忽略了这一点，从而为安全漏洞铺平了道路。 https://hackerone.com/cosmos?type=team
《Cosmos生态安全指南》 https://mp.weixin.qq.com/s/RFHGOZNKMYCJ6ntvCNokFQ
https://indd.adobe.com/view/91035407-4f21-4383-9485-a56394d9f95f</description>
    </item>
    <item>
      <title>JustCTF2024</title>
      <link>https://m4sk93.github.io/posts/justctf2024/</link>
      <pubDate>Wed, 19 Jun 2024 00:44:30 +0000</pubDate>
      <guid>https://m4sk93.github.io/posts/justctf2024/</guid>
      <description>https://2024.justctf.team/challenges 有三道blockchain题目，都是sui move的,
这些题目使用sui-ctf-framework进行部署，我觉得还挺有意思的.
以tos_docker.tar.gz这道签到题为例，分析下出题框架.
调用solve https://github.com/m4sk93/movectf/blob/b73a9ca26fd44b00e00eeca837ea2b481bf35c45/justctf2024/tos/sources/framework/src/main.rs#L162-L187
准备参数时，需要获取一些ObjectID
// Prepare Function Call Arguments let mut args_solve: Vec&amp;lt;SuiValue&amp;gt; = Vec::new(); let spellbook = SuiValue::Object(FakeID::Enumerated(2, 0), None); args_solve.push(spellbook.clone()); let type_args_solve: Vec&amp;lt;TypeTag&amp;gt; = Vec::new(); // Call solve Function let ret_val = match sui_ctf_framework::call_function( &amp;amp;mut adapter, sol_addr, &amp;#34;solve&amp;#34;, &amp;#34;solve&amp;#34;, args_solve, type_args_solve, Some(&amp;#34;solver&amp;#34;.to_string()), ).await { Ok(output) =&amp;gt; output, Err(e) =&amp;gt; { let _ = adapter.cleanup_resources().await; println!(&amp;#34;[SERVER] error: {e}&amp;#34;); return Err(&amp;#34;error during call to solve::solve&amp;#34;.into()) } }; println!</description>
    </item>
    <item>
      <title>MoveCTF2024_Swap</title>
      <link>https://m4sk93.github.io/posts/movectf2024_swap/</link>
      <pubDate>Mon, 03 Jun 2024 01:46:20 +0000</pubDate>
      <guid>https://m4sk93.github.io/posts/movectf2024_swap/</guid>
      <description>考察闪电贷 题目源码 https://github.com/movebit/movectf2024-day1/tree/main/swap
环境搭建 部署后，先调用初始化函数
#!/bin/bash PackageID=0x2d1ee80d8152a1b3f941c915748a680a1467dcdffe3f261527b190deddf8e48a minta=0x5bc9a9a9ed82b9a0de90b6ec3926b162db1a5149937e88fb9c5e49e700d8cde9 #ObjectType: 0x2d1ee80d8152a1b3f941c915748a680a1467dcdffe3f261527b190deddf8e48a::ctfa::MintA&amp;lt;0x2d1ee80d8152a1b3f941c915748a680a1467dcdffe3f261527b190deddf8e48a::ctfa::CTFA&amp;gt; a_type=&amp;#39;0x2d1ee80d8152a1b3f941c915748a680a1467dcdffe3f261527b190deddf8e48a::ctfa::CTFA&amp;#39; mintb=0xb6bfd99e4341eaa3e630982750bcd4b75b1cd9d86dbeac46a83b84731bb15fb9 #ObjectType: 0x2d1ee80d8152a1b3f941c915748a680a1467dcdffe3f261527b190deddf8e48a::ctfb::MintB&amp;lt;0x2d1ee80d8152a1b3f941c915748a680a1467dcdffe3f261527b190deddf8e48a::ctfb::CTFB&amp;gt; b_type=&amp;#39;0x2d1ee80d8152a1b3f941c915748a680a1467dcdffe3f261527b190deddf8e48a::ctfb::CTFB&amp;#39; sui client call --package $PackageID \ --module vault \ --function initialize \ --type-args $a_type $b_type \ --args $minta $mintb \ # public entry fun initialize&amp;lt;A,B&amp;gt;(capa: MintA&amp;lt;A&amp;gt;, capb: MintB&amp;lt;B&amp;gt;,ctx: &amp;amp;mut TxContext) { # let vault = Vault&amp;lt;A, B&amp;gt; { # id: object::new(ctx), # coin_a: coin::into_balance(ctfa::mint_for_vault(capa, ctx)), # coin_b: coin::into_balance(ctfb::mint_for_vault(capb, ctx)), # flashed: false # }; # transfer::share_object(vault); # } 初始化操作会给vault 100个coinA和100个coinB,给sender 10个coinA和10个coinB</description>
    </item>
    <item>
      <title>MoveCTF2022 FlashLoan</title>
      <link>https://m4sk93.github.io/posts/movectf2022_3/</link>
      <pubDate>Fri, 31 May 2024 00:37:25 +0000</pubDate>
      <guid>https://m4sk93.github.io/posts/movectf2022_3/</guid>
      <description>原题目在https://github.com/movebit/movectf-4/blob/master/sources/module.move 考察闪电贷 由于Move2024有些变化，我对源码做了微调https://github.com/m4sk93/movectf/tree/main/movectf2022/flashloan
环境搭建 参考MoveCTF2022 Checkin部署题目后，
为了后续调用方便，在配置文件中添加package ID
[package] name = &amp;#34;movectf2022_flashloan&amp;#34; edition = &amp;#34;2024.beta&amp;#34; # edition = &amp;#34;legacy&amp;#34; to use legacy (pre-2024) Move # license = &amp;#34;&amp;#34; # e.g., &amp;#34;MIT&amp;#34;, &amp;#34;GPL&amp;#34;, &amp;#34;Apache 2.0&amp;#34; # authors = [&amp;#34;...&amp;#34;] # e.g., [&amp;#34;Joe Smith (joesmith@noemail.com)&amp;#34;, &amp;#34;John Snow (johnsnow@noemail.com)&amp;#34;] published-at = &amp;#34;0x2a61d471519b8e85a7730bebcfc3c5cace6ffffb2f5576d593821422d514adc2&amp;#34; # package id [dependencies] Sui = { git = &amp;#34;https://github.com/MystenLabs/sui.git&amp;#34;, subdir = &amp;#34;crates/sui-framework/packages/sui-framework&amp;#34;, rev = &amp;#34;framework/testnet&amp;#34; } [addresses] #movectf2022_flashloan = &amp;#34;0x0&amp;#34; movectf2022_flashloan = &amp;#34;0x2a61d471519b8e85a7730bebcfc3c5cace6ffffb2f5576d593821422d514adc2&amp;#34; # package id 编写exp 为了调用题目，在配置文件中添加依赖</description>
    </item>
    <item>
      <title>MoveCTF2022 Checkin </title>
      <link>https://m4sk93.github.io/posts/movectf2022_1/</link>
      <pubDate>Thu, 30 May 2024 12:38:18 +0000</pubDate>
      <guid>https://m4sk93.github.io/posts/movectf2022_1/</guid>
      <description>本文通过MoveCTF2022的签到题，介绍Sui基本的发布、测试方法。 Sui开发环境搭建请参考 使用VPS从0搭建Sui开发环境 原题目在https://github.com/movebit/movectf-1/blob/master/sources/module.move
搭建题目环境 在testnet搭建
由于Move2024版本的变化，调整了下源码
test@VM-0-7-debian:~$ sui client switch --env testnet Active environment switched to [testnet] test@VM-0-7-debian:~$ sui move new movectf2022_checkin test@VM-0-7-debian:~$ cd movectf2022_checkin/ test@VM-0-7-debian:~/movectf2022_checkin$ ls Move.toml sources tests test@VM-0-7-debian:~/movectf2022_checkin$ cd sources/ test@VM-0-7-debian:~/movectf2022_checkin/sources$ ls movectf2022_checkin.move test@VM-0-7-debian:~/movectf2022_checkin/sources$ vim movectf2022_checkin.move test@VM-0-7-debian:~/movectf2022_checkin/sources$ cat movectf2022_checkin.move /// Module: movectf2022_checkin module movectf2022_checkin::movectf2022_checkin { use sui::event; use sui::tx_context::{Self, TxContext}; ///Visibility annotations are required on struct declarations from the Move 2024 edition onwards. ///struct Flag has copy, drop { public struct Flag has copy, drop { user: address, flag: bool } public entry fun get_flag(ctx: &amp;amp;mut TxContext) { event::emit(Flag { user: tx_context::sender(ctx), flag: true }) } } test@VM-0-7-debian:~/movectf2022_checkin$ sui move build .</description>
    </item>
    <item>
      <title>使用VPS从0搭建Sui开发环境</title>
      <link>https://m4sk93.github.io/posts/vps_sui_env/</link>
      <pubDate>Thu, 30 May 2024 02:21:46 +0000</pubDate>
      <guid>https://m4sk93.github.io/posts/vps_sui_env/</guid>
      <description>本文记录在一个全新的VPS上，从0开始搭建Sui的开发环境。
搭建环境 ssh登录vps后，如果使用的是root账户,一定要新建一个普通权限账户(有些软件不允许使用root运行，比如马上用到的brew),并且将他添加到sudo组里.
root@VM-0-7-debian:~# useradd -m test root@VM-0-7-debian:~# echo &amp;#39;test ALL=(ALL) NOPASSWD:ALL&amp;#39; &amp;gt;&amp;gt; /etc/sudoers root@VM-0-7-debian:~# su test $ bash test@VM-0-7-debian:/root$ ls ls: cannot open directory &amp;#39;.&amp;#39;: Permission denied test@VM-0-7-debian:/root$ cd test@VM-0-7-debian:~$ ls 参考官方文档搭建环境
https://docs.sui.io/guides/developer/getting-started/sui-install
使用brew安装sui 由于VPS的性能不够，所以不能使用源码安装sui，采用brew安装，先安装brew.
使用普通权限账户执行一下命令
/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34; (echo; echo &amp;#39;eval &amp;#34;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&amp;#34;&amp;#39;) &amp;gt;&amp;gt; /home/test/.profile eval &amp;#34;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&amp;#34; 然后安装sui
test@VM-0-7-debian:~$ brew install sui ==&amp;gt; Auto-updating Homebrew... Adjust how often this is run with HOMEBREW_AUTO_UPDATE_SECS or disable with HOMEBREW_NO_AUTO_UPDATE.</description>
    </item>
  </channel>
</rss>
